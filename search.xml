<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>B站水哥自动化程序的拓展</title>
      <link href="2021/12/10/B%E7%AB%99%E6%B0%B4%E5%93%A5%E8%87%AA%E5%8A%A8%E5%8C%96%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%8B%93%E5%B1%95/"/>
      <url>2021/12/10/B%E7%AB%99%E6%B0%B4%E5%93%A5%E8%87%AA%E5%8A%A8%E5%8C%96%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%8B%93%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在B站上看见了不高兴就喝水大佬用python写了一个自动化软件，比较感兴趣(PS：之前也写过一个脚本，是我拿来打方舟的，当然了那个脚本的实现是比较笨的)，然后在下面评论区又看见另一位up（各种焱）对该脚本又做了一个拓展，加上了热键组合、当前时间、系统指令集，也挺厉害的。然后在这个视频下面看到了有人想要一个跳转指令的，就回复了一下，想着既然已经回复了不如就干脆写一篇博客，正好能给我水一篇（不是），距离上一篇已经过去了3个月，震惊！接下来会好好更博客的（大概）。</p><ul><li><p><a href="https://www.bilibili.com/video/BV1T34y1o73U?share_source=copy_web">水哥的视频链接</a></p></li><li><p><a href="https://www.bilibili.com/video/BV18L41177Dq?share_source=copy_web">各种焱大佬的视频链接</a></p></li><li><p>B友要求以及我的回复的图：</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/mushanbc/ImgHosting@main/img/3-1.png"></p><blockquote><p>本拓展是在各种焱大佬拓展代码的基础上写的</p></blockquote><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>方法已经在上图说得很清楚了(大概)。当然这个方法还是存在一些问题的，因为设置的是一个变量而不是数组，所以跳转的命令段里面如果还有跳转则不会生效；也就是当发生嵌套的时候不会生效，解决办法就是设置成数组，那么判断则会变得复杂，下面的代码就仅仅实现一个跳转。</p><ol><li><p>在dataCheck函数中添加几行代码，让函数知道命令10是合法的</p><ul><li><p><code>and cmdType.value != 10.0</code> </p></li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#10.0跳转命令,内容必须为数字且要小于命令行数以及大于0</span></span><br><span class="line"><span class="keyword">if</span> cmdType.value == <span class="number">10.0</span>:</span><br><span class="line">    <span class="keyword">if</span> (cmdValue.ctype != <span class="number">2</span> <span class="keyword">and</span> <span class="built_in">int</span>(cmdValue.value) &lt;= sheet1.nrows <span class="keyword">and</span> <span class="built_in">int</span>(cmdValue.value) &gt; sheet1.nrows):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;第&#x27;</span>, i + <span class="number">1</span>, <span class="string">&quot;行,第2列数据有毛病&quot;</span>)</span><br><span class="line">      checkCmd = <span class="literal">False</span></span><br></pre></td></tr></table></figure></li><li><p>添加位置如下图</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/mushanbc/ImgHosting@main/img/3-2.png"></p></li><li><p><img src="https://cdn.jsdelivr.net/gh/mushanbc/ImgHosting@main/img/3-3.png"></p></li></ul></li><li><p>在mainWork函数中添加代码，实现命令10的功能</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#10代表跳转</span></span><br><span class="line"><span class="keyword">elif</span> cmdType.value == <span class="number">10.0</span>:</span><br><span class="line">    <span class="keyword">if</span> flag == <span class="literal">False</span>:</span><br><span class="line">        k = <span class="built_in">int</span>(sheet1.row(i)[<span class="number">2</span>].value)</span><br><span class="line">        i = <span class="built_in">int</span>(sheet1.row(i)[<span class="number">1</span>].value)-<span class="number">2</span></span><br><span class="line">        flag = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        k-=<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> k==<span class="number">0</span>:</span><br><span class="line">            flag=<span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            i = <span class="built_in">int</span>(sheet1.row(i)[<span class="number">1</span>].value)-<span class="number">2</span></span><br></pre></td></tr></table></figure><ul><li>添加位置如下图</li><li><img src="https://cdn.jsdelivr.net/gh/mushanbc/ImgHosting@main/img/3-4.png"></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li><p>原始代码在dataCheck里面并没有检查第三列的数据类型，而是在mainWork里做的检查，感觉怪怪的</p></li><li><p><code>pyautogui.locateCenterOnScreen(img, confidence=0.9)</code>返回的是图片中心的坐标元组</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 小玩意儿 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>雷霆战机Java实现</title>
      <link href="2021/09/17/%E9%9B%B7%E9%9C%86%E6%88%98%E6%9C%BAjava/"/>
      <url>2021/09/17/%E9%9B%B7%E9%9C%86%E6%88%98%E6%9C%BAjava/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>学校组织了项目实习，最终成果是制作一个在线聊天室，而雷霆战机这个游戏作为聊天室前的先行练手项目也让我学习到了很多东西，所以做一次技术和项目经验的总结。</p><blockquote><p>完整项目代码去我的<a href="https://github.com/ZrushBC/java-psyvariar-delta">github</a>上去看看吧。</p></blockquote><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>工具<ol><li>Java的编译环境JDK</li><li>java的编译器（IDEA或者eclipse）</li></ol></li><li>所用到Java知识<ol><li>面向对象的知识</li><li>Java Swing（Java的图形库）</li><li>鼠标监听事件（MouseAdapter）</li></ol></li></ul><h2 id="总览以及项目需求分析"><a href="#总览以及项目需求分析" class="headerlink" title="总览以及项目需求分析"></a>总览以及项目需求分析</h2><h3 id="游戏运行预览图"><a href="#游戏运行预览图" class="headerlink" title="游戏运行预览图"></a>游戏运行预览图</h3><p><img src="https://cdn.jsdelivr.net/gh/mushanbc/ImgHosting@main/img/77777.gif" alt="77777"></p><h2 id="项目需求分析"><a href="#项目需求分析" class="headerlink" title="项目需求分析"></a>项目需求分析</h2><h3 id="总浏图"><a href="#总浏图" class="headerlink" title="总浏图"></a>总浏图</h3><p><img src="https://cdn.jsdelivr.net/gh/mushanbc/ImgHosting@main/img/image-20210917104628708.png"></p><h3 id="具体分析"><a href="#具体分析" class="headerlink" title="具体分析"></a>具体分析</h3><p>通过游戏运行预览图，我们可以发现；游戏总共可以分为三个阶段，即，游戏准备阶段、游戏运行阶段、游戏结束阶段。下面我们将从这三个方面进行具体分析。</p><h4 id="游戏准备阶段"><a href="#游戏准备阶段" class="headerlink" title="游戏准备阶段"></a>游戏准备阶段</h4><p>开始界面包括：</p><ul><li><p>开始游戏</p><ol><li>新的界面并提示文字</li><li>弹窗记录玩家信息（预览图中没有体现，但实际上是有的，被截掉了）</li></ol></li><li><p>历史记录</p><ol><li>新的界面</li><li>打印历史游玩记录（上预览图未显示，在下面补上）<br><img src="https://cdn.jsdelivr.net/gh/mushanbc/ImgHosting@main/img/image-20210917110055698.png"></li></ol></li></ul><h4 id="游戏运行阶段"><a href="#游戏运行阶段" class="headerlink" title="游戏运行阶段"></a>游戏运行阶段</h4><p>可以看到游戏运行的时候，是由四类物体的，包括本机、敌机、子弹和小蜜蜂的。另外对行为分析，能看出是有两个行为的，即，四类物体移动方法和碰撞检测。</p><h5 id="类和对象的设置"><a href="#类和对象的设置" class="headerlink" title="类和对象的设置"></a>类和对象的设置</h5><p>总共有四种物体，通过设置四个类来产生四种对象是可行的，但会产生重复，四个类基本都是飞行物，他们应该都具有坐标，行动方法，宽高，以及难度提升后的速度改变方法等等，所以可以对这四个类设置一个父类，在父类设置公共属性和方法，再在子类中重写，这样就很好了。</p><table><thead><tr><th>类</th><th>属性</th><th>方法</th></tr></thead><tbody><tr><td>飞行物类</td><td>坐标，贴图宽高</td><td>抽象飞行方法，抽象速度改变方法，碰撞检测</td></tr><tr><td>本机类（英雄机）</td><td>继承父类属性，生命值，火力值</td><td>继承抽象方法（速度改变设置为空），本身属性改变方法，产生子弹的方法，图片切换（本机火焰闪烁）方法</td></tr><tr><td>小蜜蜂类</td><td>继承父类属性，奖励类型属性（0或者1）</td><td>继承抽象方法，奖励类型获取方法</td></tr><tr><td>敌机类</td><td>继承父类属性</td><td>继承抽象方法，分数获取方法</td></tr><tr><td>子弹类</td><td>继承父类属性</td><td>继承抽象方法（速度改变设置为空）</td></tr></tbody></table><h5 id="对象的行为设置"><a href="#对象的行为设置" class="headerlink" title="对象的行为设置"></a>对象的行为设置</h5><ul><li>飞行方法</li></ul><table><thead><tr><th>对象</th><th>方法</th></tr></thead><tbody><tr><td>本机</td><td>随着鼠标移动</td></tr><tr><td>小蜜蜂</td><td>由上向下斜着移动</td></tr><tr><td>敌机</td><td>由上向下竖直运动</td></tr><tr><td>子弹</td><td>由飞机发出，由下向上移动</td></tr></tbody></table><ul><li><p>碰撞检测</p><ol><li><p>子弹碰撞事件</p><blockquote><p>分为两种情况分析，子弹碰撞小蜜蜂以及子弹碰撞敌机。子弹碰撞小蜜蜂会有随机奖励事件（给自己的英雄机加血量或者加火力）；子弹碰撞敌机，会有分数奖励。</p></blockquote></li><li><p>英雄机碰撞事件</p><blockquote><p>本机（英雄机）撞到敌机和小蜜蜂会有减少血量以及降低火力的惩罚。</p></blockquote></li></ol></li></ul><h4 id="游戏结束阶段"><a href="#游戏结束阶段" class="headerlink" title="游戏结束阶段"></a>游戏结束阶段</h4><p>当血量降低到0以下时，游戏就会结束。显示gameover的界面。</p><p>再次点击屏幕，会回到游戏准备界面，同时将本次游戏产生的数据初始化（例如生命值、分数、敌人等等）</p><h2 id="项目总体设计以及关键代码"><a href="#项目总体设计以及关键代码" class="headerlink" title="项目总体设计以及关键代码"></a>项目总体设计以及关键代码</h2><p><img src="https://cdn.jsdelivr.net/gh/mushanbc/ImgHosting@main/img/image-20210917165212004.png" alt="image-20210917165212004"></p><h3 id="开始界面判断函数代码"><a href="#开始界面判断函数代码" class="headerlink" title="开始界面判断函数代码"></a>开始界面判断函数代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过鼠标点击位置来判断开始游戏或者排行榜</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">check_start</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (x&gt;<span class="number">85</span>&amp;&amp;x&lt;<span class="number">305</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (y&gt;<span class="number">315</span>&amp;&amp;y&lt;<span class="number">395</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> READY;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (y&gt;<span class="number">395</span>&amp;&amp;y&lt;<span class="number">485</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> RANK;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> START;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="历史记录打印"><a href="#历史记录打印" class="headerlink" title="历史记录打印"></a>历史记录打印</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//历史记录打印</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw_rank</span><span class="params">(Graphics g)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x=<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> y=<span class="number">95</span>;</span><br><span class="line">        Font f = <span class="keyword">new</span> Font(Font.DIALOG,Font.BOLD,<span class="number">40</span>);</span><br><span class="line">        g.setFont(f);</span><br><span class="line">        g.drawString(<span class="string">&quot;历史记录&quot;</span>,<span class="number">100</span>,<span class="number">40</span>);</span><br><span class="line">        f = <span class="keyword">new</span> Font(Font.DIALOG,Font.BOLD,<span class="number">25</span>);</span><br><span class="line">        g.setFont(f);</span><br><span class="line">        g.drawString(<span class="string">&quot;姓名&quot;</span>,<span class="number">10</span>,<span class="number">85</span>);</span><br><span class="line">        g.drawString(<span class="string">&quot;分数&quot;</span>,<span class="number">100</span>,<span class="number">85</span>);</span><br><span class="line">        f = <span class="keyword">new</span> Font(Font.DIALOG,Font.BOLD,<span class="number">15</span>);</span><br><span class="line">        g.setFont(f);</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            InputStream t = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;E:/Myjava/Mygame/src/zcb/com/rank.txt&quot;</span>);</span><br><span class="line">            InputStreamReader reader = <span class="keyword">new</span> InputStreamReader(t);</span><br><span class="line">            BufferedReader buffReader = <span class="keyword">new</span> BufferedReader(reader);</span><br><span class="line">            String strTmp = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>((strTmp = buffReader.readLine())!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                y+=<span class="number">25</span>;</span><br><span class="line">                g.drawString(strTmp,x,y);</span><br><span class="line">            &#125;</span><br><span class="line">            buffReader.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;文件打开失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="飞行物类"><a href="#飞行物类" class="headerlink" title="飞行物类"></a>飞行物类</h3><p>包括属性、抽象方法以及碰撞检测</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 飞行物类，一个父类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">FlyingObject</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> BufferedImage image;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> y;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> width;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> height;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//封装一个飞行物行动的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">step</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">change_speed</span><span class="params">(<span class="keyword">int</span> level)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//检查子弹碰撞</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">check_hit</span><span class="params">(Bullet b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x1=<span class="keyword">this</span>.x;</span><br><span class="line">        <span class="keyword">int</span> x2=<span class="keyword">this</span>.x+<span class="keyword">this</span>.width;</span><br><span class="line">        <span class="keyword">int</span> y1=<span class="keyword">this</span>.y;</span><br><span class="line">        <span class="keyword">int</span> y2=<span class="keyword">this</span>.y+<span class="keyword">this</span>.height;</span><br><span class="line">        <span class="keyword">int</span> x=b.x;</span><br><span class="line">        <span class="keyword">int</span> y=b.y;</span><br><span class="line">        <span class="keyword">return</span> x&gt;x1 &amp;&amp; x&lt;x2 &amp;&amp; y&gt;y1 &amp;&amp; y&lt;y2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//检查英雄机碰撞</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">checkHero_hit</span><span class="params">(Hero b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x1=<span class="keyword">this</span>.x-b.width/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> x2=<span class="keyword">this</span>.x+<span class="keyword">this</span>.width+b.width/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> y1=<span class="keyword">this</span>.y-b.height/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> y2=<span class="keyword">this</span>.y+<span class="keyword">this</span>.height+b.width/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> x=b.x+b.width/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> y=b.y+b.height/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">return</span> x&gt;x1 &amp;&amp; x&lt;x2 &amp;&amp; y&gt;y1 &amp;&amp; y&lt;y2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="总结以及Flag"><a href="#总结以及Flag" class="headerlink" title="总结以及Flag"></a>总结以及Flag</h2><p>这次项目让我了解到了一些项目的实现的过程，但是还是有很多不太清楚，这个项目前后端是糅合在一起的，一直听前后端分离，具体怎么实现倒是一概不知，这是我得去学习和了解的。</p><p>复杂程度感觉一般，和我之前用C语言写的五子棋倒是半斤八两，不过这次显得更加高级，因为加入了java的Swing技术，加上了界面；c语言的五子棋，我是黑框中玩的而且刷新频率很低，屏幕闪动肉眼可见，真是一言难尽啊。</p><p><strong>遗憾的地方</strong></p><ol><li>本来想着做一个单人和双人的选项来着，结果键盘监听事件不起作用（想着两个人都用键盘控制），双人游戏的多线程实现也是大失败，所以阉割了。</li><li>历史记录部分是准备做成排行榜的，结果成这样了。可以想象，其实改成排行榜并不难，开始游戏时都先读取文件，并在最后写入文件前将新的游玩信息插入到合适的位置就行了。（真心不想写，另外这一功能在五子棋中也写过，所以就不写了）</li></ol><p><strong>Flag</strong></p><ol><li>C++再次实现一下（还得迅速把C++学完啊）</li><li>了解前后端分离（实际的项目到底是什么样的啊）</li><li>要开始练练算法题目了啊</li></ol>]]></content>
      
      
      <categories>
          
          <category> 项目总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
            <tag> java </tag>
            
            <tag> 项目 </tag>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法简单学习</title>
      <link href="2021/04/22/Markdown%E8%AF%AD%E6%B3%95%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0/"/>
      <url>2021/04/22/Markdown%E8%AF%AD%E6%B3%95%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文只是个人博客的试验田，最主要的是熟悉一下Markdown语法。另外标题也说了简单学习，所以下列语法只是我觉得会用得多的语法（虽然感觉已经是全貌了），但不排除有未来需要用的语法，以后再补充吧，下方的代码块注释用的是C语言中注释方法。</p><h2 id="斜体和粗体"><a href="#斜体和粗体" class="headerlink" title="斜体和粗体"></a>斜体和粗体</h2><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*这里是倾斜的字啊*</span> or <span class="emphasis">_这里也是(●ˇ∀ˇ●)_</span></span><br></pre></td></tr></table></figure><p><em>这里是倾斜的字啊</em> or <em>这里也是(●ˇ∀ˇ●)</em></p><h3 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**这里是粗体字**</span> or <span class="strong">__这里也是(●ˇ∀ˇ●)__</span></span><br></pre></td></tr></table></figure><p><strong>这里是粗体字</strong> or <strong>这里也是(●ˇ∀ˇ●)</strong></p><h3 id="粗斜体"><a href="#粗斜体" class="headerlink" title="粗斜体"></a>粗斜体</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**<span class="emphasis">*这里是粗斜体<span class="strong">**<span class="emphasis">* or <span class="strong">__<span class="emphasis">_这里也是<span class="strong">__<span class="emphasis">_</span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure><p><em><strong>这里是粗斜体</strong></em> or <em><strong>这里也是</strong></em></p><hr><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><hr><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一类标题</span></span><br><span class="line"><span class="section">## 二类标题</span></span><br><span class="line"><span class="section">### 三类标题                   /<span class="emphasis">*本文中使用了二级标题、三级标题、四级标题，可在侧边目录看见*</span>/</span></span><br><span class="line"><span class="section">#### 四类标题</span></span><br><span class="line"><span class="section">##### 五类标题</span></span><br><span class="line"><span class="section">###### 六类标题</span></span><br></pre></td></tr></table></figure><hr><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c语言的函数 <span class="code">`scanf()`</span>怎么使用</span><br></pre></td></tr></table></figure><p>c语言的函数 <code>scanf()</code>怎么使用</p><h3 id="缩进式"><a href="#缩进式" class="headerlink" title="缩进式"></a>缩进式</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">****</span>#include<span class="xml"><span class="tag">&lt;<span class="name">stdio.h</span>&gt;</span></span></span><br><span class="line"><span class="strong">****</span>int main(void)</span><br><span class="line"><span class="strong">****</span>&#123;                 /<span class="emphasis">*代码前缩进一个制表符（4个空格），这里用*</span>表示空格。代码块会持续到缩进结束<span class="emphasis">*/</span></span><br><span class="line"><span class="emphasis"><span class="strong">****</span>printf(&quot;hello word&quot;);</span></span><br><span class="line"><span class="emphasis"><span class="strong">****</span>&#125;</span></span><br></pre></td></tr></table></figure><pre><code>#include&lt;stdio.h&gt;int main(void)&#123;    printf(&quot;hello word&quot;);&#125;</code></pre><h3 id="用六-个包裹代码"><a href="#用六-个包裹代码" class="headerlink" title="用六`个包裹代码"></a>用六`个包裹代码</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```c        /*这里应该是具体的代码语言*/</span></span><br><span class="line"><span class="code">#include&lt;stdio.h&gt;</span></span><br><span class="line"><span class="code">         ·</span></span><br><span class="line"><span class="code">         ·</span></span><br><span class="line"><span class="code">         ·  </span></span><br><span class="line"><span class="code">\```   /*这里是没有\的，为了使其不显示特意加上的*/</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line">         ·</span><br><span class="line">         ·</span><br><span class="line">         ·</span><br></pre></td></tr></table></figure><hr><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><h3 id="行内式-1"><a href="#行内式-1" class="headerlink" title="行内式"></a>行内式</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">点这里➡[<span class="string">哔哩哔哩</span>](<span class="link">https://www.bilibili.com/</span>)   /<span class="emphasis">*[连接文字]（链接地址）</span></span><br></pre></td></tr></table></figure><p>点这里➡<a href="https://www.bilibili.com/">哔哩哔哩</a></p><h3 id="参考式"><a href="#参考式" class="headerlink" title="参考式"></a>参考式</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">我常用的网站有：[<span class="string">哔哩哔哩</span>][<span class="symbol">1</span>]，[<span class="string">知乎</span>][<span class="symbol"></span>]，[<span class="string">Github</span>][<span class="symbol">3</span>]  /<span class="emphasis">*这里是[<span class="string">链接文字</span>][<span class="symbol">连接标记</span>]</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">/*</span>1、后一个方括号里面的数字可以不写，即：[<span class="string">哔哩哔哩</span>][<span class="symbol"></span>]，那么下面的链接标记则要写成相应的文字</span><br><span class="line">  2、下方的链接可以放在md文件的末尾（感觉跟文章的注释差不多）</span><br><span class="line"><span class="emphasis">*/</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">[1]:https://www.bilibili.com/ &quot;哔哩哔哩&quot;</span></span><br><span class="line"><span class="emphasis">[知乎]:https://www.zhihu.com/ &quot;知乎&quot;           /*</span> [标记或者文字]         </span><br><span class="line"><span class="code">                                     ：链接+“空格”+&quot;鼠标悬停的文字提示&quot; */</span></span><br><span class="line"><span class="code">[3]:https://github.com/ &quot;Github&quot;</span></span><br></pre></td></tr></table></figure><p>我常用的网站有：<a href="https://www.bilibili.com/" title="哔哩哔哩">哔哩哔哩</a>，<a href="https://www.zhihu.com/" title="知乎">知乎</a>，<a href="https://github.com/" title="Github">Gitbub</a></p><hr><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt;引用啊引用</span><br><span class="line"></span><br><span class="line">&gt;引用啊引用</span><br><span class="line"><span class="code">                        /*单引用，如果没有空行会一起被引用符号标记*/</span></span><br><span class="line"><span class="code">&gt;引用啊引用</span></span><br><span class="line"><span class="code">引用啊引用</span></span><br><span class="line"><span class="code">引用啊引用</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">&gt;&gt;&gt;&gt;多层嵌套引用</span></span><br><span class="line"><span class="code">&gt;&gt;&gt;&gt;</span></span><br><span class="line"><span class="code">对！                     /*具体的嵌套引用不太清楚*/</span></span><br><span class="line"><span class="code">&gt;&gt;&gt;</span></span><br><span class="line"><span class="code">就这？</span></span><br><span class="line"><span class="code">&gt;&gt;</span></span><br><span class="line"><span class="code">就这!                      /*有两种？先写着吧，看吧。感觉用到的会较少*/</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">&gt;&gt;&gt;&gt;多层嵌套引用</span></span><br><span class="line"><span class="code">&gt;&gt;&gt;对！                     /*具体的嵌套引用不太清楚*/</span></span><br><span class="line"><span class="code">&gt;&gt;就这？</span></span><br><span class="line"><span class="code">&gt;就这!</span></span><br></pre></td></tr></table></figure><blockquote><p>引用啊引用</p></blockquote><blockquote><p>引用啊引用</p></blockquote><blockquote><p>引用啊引用<br>引用啊引用<br>引用啊引用</p></blockquote><blockquote><blockquote><blockquote><blockquote><p>多层嵌套引用</p></blockquote><p>对！</p></blockquote><p>就这？</p></blockquote><p>就这!</p></blockquote><blockquote><blockquote><blockquote><blockquote><p>多层嵌套引用<br>对！<br>就这？<br>就这！</p></blockquote></blockquote></blockquote></blockquote><hr><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 无序列表1</span><br><span class="line"><span class="bullet">+</span> 无序列表2         /<span class="emphasis">*无序符号+空格+列表文字。*</span>，-，+效果是一样的。</span><br><span class="line"><span class="bullet">*</span> 无序列表3</span><br></pre></td></tr></table></figure><ul><li>无序列表1</li></ul><ul><li>无序列表2</li></ul><ul><li>无序列表3</li></ul><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 有序列表一</span><br><span class="line"><span class="bullet">2.</span> 有序列表二</span><br><span class="line"><span class="bullet">3.</span> 有序列表三</span><br></pre></td></tr></table></figure><ol><li>有序列表一</li><li>有序列表二</li><li>有序列表三</li></ol><h3 id="包含引用的列表"><a href="#包含引用的列表" class="headerlink" title="包含引用的列表"></a>包含引用的列表</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 如何起床</span><br><span class="line"></span><br><span class="line"><span class="code">&gt;&gt;&gt;闹钟响起</span></span><br><span class="line"><span class="code">&gt;&gt;&gt;</span></span><br><span class="line"><span class="code">摁掉</span></span><br><span class="line"><span class="code">&gt;&gt;</span></span><br><span class="line"><span class="code">接着睡</span></span><br></pre></td></tr></table></figure><ul><li><p>如何起床</p><blockquote><blockquote><blockquote><p>闹钟响起</p></blockquote><p>  摁掉</p></blockquote><p>  接着睡</p></blockquote></li></ul><hr><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">真令人头大</span>](<span class="link">https://cdn.jsdelivr.net/gh/mushanbc/ImgHosting@main/img/162670447836.jpg &quot;令人头大&quot;</span>)</span><br><span class="line">/<span class="emphasis">*![图片无法加载时的文字说明]（图片地址 &quot;鼠标悬停时的文字说明&quot;）  ⬅有空格啊,也能使用本地地址*</span>/</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/mushanbc/ImgHosting@main/img/162670447836.jpg" alt="真令人头大" title="令人头大"></p>]]></content>
      
      
      <categories>
          
          <category> 语言语法总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello</title>
      <link href="2021/04/16/hello-world/"/>
      <url>2021/04/16/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
